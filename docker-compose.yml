version: '3.9'

services:
  sui-fullnode:
    image: mysten/sui-node:ci-arm64
    container_name: sui-fullnode-testnet
    restart: always
    volumes:
      - ./sui-config:/sui-config
      - ./sui-db:/sui-db
      - ./sui-data:/sui-data
    ports:
      - "9000:9000"
      - "9184:9184"
    command: [
      "sui-node",
      "--config-path", "/sui-config/fullnode.yaml"
    ]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    container_name: kafka-manager
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      KAFKA_MANAGER_AUTH_ENABLED: "false"
      KAFKA_CLUSTERS: >
        [{ "name": "LocalKafka",
           "zkHosts": "zookeeper:2181",
           "jmxEnabled": false,
           "pollConsumers": false,
           "kafkaVersion": "2.8.0",
           "activeOffsetCacheEnabled": false }]
    restart: always

  sui-postgres:
    image: postgres:15
    container_name: sui-postgres
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres3
      POSTGRES_DB: suiindex
    ports:
      - "54321:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ch_data:/var/lib/clickhouse
      - ./init:/docker-entrypoint-initdb.d/
    environment:
      CLICKHOUSE_DB: suiaggr
      CLICKHOUSE_USER: suiuser
      CLICKHOUSE_PASSWORD: suipass

  indexing-service:
    build:
      context: ./indexing-service
      dockerfile: Dockerfile
    container_name: indexing-service
    environment:
        - SPRING_JPA_HIBERNATE_DDL_AUTO=none
    depends_on:
      - sui-postgres
    ports:
      - "8081:8081"

  sui-api:
    build:
      context: ./sui-api
      dockerfile: Dockerfile
    container_name: sui-api
    environment:
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
    depends_on:
      - sui-postgres
    ports:
      - "8082:8082"

volumes:
  pg_data:
  ch_data:
